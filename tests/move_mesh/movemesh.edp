include "mesh2vector.edp" // Definition of the mesh and parametrization [Cx,Cy] of the boundary

real exa;
int orientation = 1;
func real F1(real x1,real x2){return x1+exa*0.2*(cos(4.*x2));}
func real F2(real x1,real x2){return x2+exa*0.1*(sin(4.*x1));}


real[int] Dx(Cx.n),Dy(Cy.n);

border A(t=0,Th.nbe){x=Dx(t);y=Dy(t);};

real exaMax=2.,dexa=0.1;
for(exa=0;exa<exaMax;exa+=dexa){
  for(int i=0;i<Th.nbe+1;i++){
    Dx(i)=F1(Cx(i),Cy(i));Dy(i)=F2(Cx(i),Cy(i));
  }
  // vector2mesh
  mesh Sh=buildmesh(A(orientation*Th.nbe),fixeborder=1);
  plot(Sh,wait=1,cmm="exa="+exa); 
}